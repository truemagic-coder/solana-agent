name: Test and Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


permissions:
  checks: write
  contents: read
  issues: write
  pull-requests: write

jobs:
  test:
    name: Python ${{ matrix.python-version }} Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12, 3.13]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install pytest pytest-cov pytest-asyncio pytest-github-actions-annotate-failures

    - name: Run tests with pytest
      run: |
        pytest --junitxml=junit/test-results.xml --cov=solana_agent --cov-report=xml --cov-report=term tests/
      
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: "junit/test-results.xml"
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results.xml
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Test Report
      uses: dorny/test-reporter@v2
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Pytest Results (${{ matrix.python-version }})
        path: junit/*.xml
        reporter: jest-junit